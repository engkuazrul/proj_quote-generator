{"version":3,"sources":["components/loader/loader.component.jsx","services/quote.service.js","components/custom-button/custom-button.component.jsx","components/quote-container/quote-container.component.jsx","redux/loader/loader.actions.js","redux/quote/quote.actions.js","pages/homepage/homepage.component.jsx","App.js","redux/quote/quote.reducer.js","redux/loader/loader.reducer.js","redux/root-reducer.js","redux/store.js","reportWebVitals.js","index.js"],"names":["Loader","className","QuoteService","a","fetch","proxyUrl","response","json","data","CustomButton","children","otherProps","isTwitterButton","QuoteContainer","changeQuote","props","setLoaderStatus","setQuoteText","setQuoteAuthor","resetQuote","then","quote","quoteText","quoteAuthor","catch","error","componentDidMount","handleClick","this","onClick","React","Component","connect","state","dispatch","type","payload","loading","loader","App","INITIAL_STATE","quoteReducer","action","loaderReducer","combineReducers","middlewares","logger","store","createStore","rootReducer","applyMiddleware","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.acd4990b.chunk.js","sourcesContent":["import './loader.styles.scss';\n\nconst Loader = () => (\n  <div className='loader'></div>\n);\n\nexport default Loader;","const proxyUrl = 'https://whispering-tor-04671.herokuapp.com/'\nconst apiUrl = 'http://api.forismatic.com/api/1.0/?method=getQuote&lang=en&format=json';\n\nconst QuoteService = async () => {\n  try {\n    const response = await fetch(proxyUrl + apiUrl);\n    const data = await response.json();\n\n    return data;\n  } catch (error) {\n    throw(error);\n  }\n};\n\nexport default QuoteService;","import React from \"react\";\n\nimport \"./custom-button.styles.scss\";\n\nconst CustomButton = ({ children, isTwitterButton, ...otherProps }) => (\n  <button className='btn' {...otherProps}>{children}</button>\n);\n\nexport default CustomButton;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { FaQuoteLeft } from \"react-icons/fa\";\n\nimport QuoteService from \"../../services/quote.service\";\n\nimport { setLoaderStatus } from \"../../redux/loader/loader.actions\";\nimport { setQuoteText, setQuoteAuthor, resetQuote } from \"../../redux/quote/quote.actions\";\n\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nimport \"./quote-container.styles.scss\";\n\nclass QuoteContainer extends React.Component {\n\n  changeQuote = () => {\n    const {setLoaderStatus, setQuoteText, setQuoteAuthor, resetQuote} = this.props;\n    \n    const fetchQuote = QuoteService();\n\n    fetchQuote\n      .then((quote) => {\n        setLoaderStatus(false);\n        setQuoteText(quote.quoteText);\n        setQuoteAuthor(quote.quoteAuthor);\n      })\n      .catch((error) => {\n        setLoaderStatus(false);\n        resetQuote();\n      });\n  }\n\n  componentDidMount = () => {\n    this.changeQuote();\n  }\n\n  handleClick = () => {\n    const {setLoaderStatus} = this.props;\n\n    setLoaderStatus(true);\n\n    this.changeQuote();\n  };\n\n  render(){\n    const {quoteText, quoteAuthor} = this.props;\n\n    return (\n      <div className=\"quote-container\">\n        <div className=\"quote-text\">\n          <span className=\"quote\">\n            <FaQuoteLeft/>\n          </span>\n          {quoteText}\n        </div>\n  \n        <div className=\"quote-author\">{quoteAuthor}</div>\n  \n        <div className=\"button-container\">\n          <CustomButton onClick={() => this.handleClick()}>New Quote</CustomButton>\n        </div>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  quoteText: state.quote.quoteText,\n  quoteAuthor: state.quote.quoteAuthor,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setLoaderStatus: (quote) => dispatch(setLoaderStatus(quote)),\n\n  setQuoteText: (quote) => dispatch(setQuoteText(quote)),\n  setQuoteAuthor: (quote) => dispatch(setQuoteAuthor(quote)),\n  resetQuote: (quote) => dispatch(resetQuote(quote)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuoteContainer);\n","export const setLoaderStatus = loader => ({\n  type: 'SET_LOADER_STATUS',\n  payload: loader\n});\n","export const setQuoteText = quote => ({\n  type: 'SET_QUOTE_TEXT',\n  payload: quote\n});\n\nexport const setQuoteAuthor = quote => ({\n  type: 'SET_QUOTE_AUTHOR',\n  payload: quote\n});\n\nexport const resetQuote = quote => ({\n  type: 'RESET_QUOTE'\n})","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Loader from '../../components/loader/loader.component';\nimport QuoteContainer from '../../components/quote-container/quote-container.component';\n\nimport './homepage.styles.scss';\n\nconst Homepage = ({loading}) => (\n  <div className='home-container'>\n    {loading === true ? <Loader />: <QuoteContainer />}\n  </div>\n);\n\nconst mapStateToProps = (state) => ({\n  loading: state.loader.loading\n});\n\nexport default connect(mapStateToProps)(Homepage);","import React from 'react';\n\nimport Homepage from './pages/homepage/homepage.component';\n\nimport './App.css';\n\nconst App = () => (\n  <Homepage />\n);\n\nexport default App;\n","const INITIAL_STATE = {\n  quoteText: 'Sorry, please try again :)',\n  quoteAuthor: 'admin'\n}\n\nconst quoteReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case 'SET_QUOTE_TEXT':\n      return {\n        ...state,\n        quoteText: action.payload\n      }\n    case 'SET_QUOTE_AUTHOR':\n      return {\n        ...state,\n        quoteAuthor: action.payload\n      }\n    case 'RESET_QUOTE':\n        return INITIAL_STATE;\n    default:\n      return state;\n  }\n}\n\nexport default quoteReducer;","const INITIAL_STATE = {\n  loading:false\n}\n\nconst loaderReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case 'SET_LOADER_STATUS':\n      return {\n        ...state,\n        loading: action.payload\n      }\n    default:\n      return state;\n  }\n}\n\nexport default loaderReducer;","import { combineReducers } from \"redux\";\n\nimport quoteReducer from \"./quote/quote.reducer\";\nimport loaderReducer from \"./loader/loader.reducer\";\n\nexport default combineReducers({\n  quote: quoteReducer,\n  loader: loaderReducer\n});","import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\n\nimport rootReducer from \"./root-reducer\";\n\nconst middlewares = [logger];\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\n\nimport store from './redux/store';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}